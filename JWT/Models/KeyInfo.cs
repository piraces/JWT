using System.Collections.Generic;
using System.Security.Claims;
using IdentityModel;

namespace JWT.Models
{
    public static class KeyInfo
    {
        private const string Algorithm = "alg";
        private const string Type = "typ";
        private const string ContentType = "cty";

        public static Dictionary<string, string> KeyInfoHeader = new Dictionary<string, string>
        {
            { Algorithm, "Signature / Encryption algorithm" },
            { Type, "Type of Token" },
            { ContentType, "Content Type. Used to convey information about the JWT" }
        };

        public static Dictionary<string, string> KeyInfoPayload = new Dictionary<string, string>
        {
            { JwtClaimTypes.Issuer, "Issuer. Identifies the principal that issued the JWT" },
            { JwtClaimTypes.Expiration, "Expiration time. Identifies the expiration time on or after which the JWT must not be accepted for processing (seconds since UNIX Epoch)" },
            { JwtClaimTypes.Subject, "Subject. Identifies the principal that is the subject of the JWT" },
            { JwtClaimTypes.Audience, "Audience. Identifies the recipients that the JWT is intended for" },
            { JwtClaimTypes.NotBefore, "Not before. Identifies the time before which the JWT must not be accepted for processing" },
            { JwtClaimTypes.IssuedAt, "Issued At. Identifies the time at which the JWT was issued" },
            { JwtClaimTypes.JwtId, "JWT ID. Provides an unique identifier for the JWT." },
            { JwtClaimTypes.AccessTokenHash ,"Access Token hash value" },
            { JwtClaimTypes.Actor ,"Actor. Provides a means within a JWT to express that delegation has occurred and identify the acting party to whom authority has been delegated" },
            { JwtClaimTypes.Address ,"End-User's preferred postal address" },
            { JwtClaimTypes.AuthenticationContextClassReference ,"Authentication Context Class Reference" },
            { JwtClaimTypes.AuthenticationMethod ,"Authentication Methods References. JSON array of strings that are identifiers for authentication methods used in the authentication" },
            { JwtClaimTypes.AuthenticationTime ,"Time when the End-User authentication occurred (seconds since UNIX Epoch)" },
            { JwtClaimTypes.AuthorizationCodeHash ,"Code hash value" },
            { JwtClaimTypes.AuthorizedParty ,"The party to which the ID Token was issued" },
            { JwtClaimTypes.BirthDate ,"End-User's birthday" },
            { JwtClaimTypes.ClientId ,"OAuth 2.0 Client Identifier valid at the Authorization Server" },
            { JwtClaimTypes.Confirmation ,"The confirmation" },
            { JwtClaimTypes.Email ,"End-User's preferred e-mail address" },
            { JwtClaimTypes.EmailVerified ,"\"true\" if the End-User's e-mail address has been verified; otherwise \"false\"" },
            { JwtClaimTypes.Events ,"Defines a set of event statements that each may add additional claims to fully describe a single logical event that has occurred" },
            { JwtClaimTypes.FamilyName ,"Surname(s) or last name(s) of the End-User" },
            { JwtClaimTypes.Gender ,"End-User's gender" },
            { JwtClaimTypes.GivenName ,"Given name(s) or first name(s) of the End-User" },
            { JwtClaimTypes.Id ,"An identifier" },
            { JwtClaimTypes.IdentityProvider ,"The identity provider" },
            { JwtClaimTypes.Locale ,"End-User's locale" },
            { JwtClaimTypes.MayAct ,"Makes a statement that one party is authorized to become the actor and act on behalf of another party" },
            { JwtClaimTypes.MiddleName ,"Middle name(s) of the End-User" },
            { JwtClaimTypes.Name ,"End-User's full name in displayable form including all name parts" },
            { JwtClaimTypes.NickName ,"Casual name of the End-User that may or may not be the same as the given_name" },
            { JwtClaimTypes.Nonce ,"String value used to associate a Client session with an ID Token, and to mitigate replay attacks" },
            { JwtClaimTypes.PhoneNumber ,"End-User's preferred telephone number" },
            { JwtClaimTypes.PhoneNumberVerified ,"True if the End-User's phone number has been verified; otherwise false" },
            { JwtClaimTypes.Picture ,"URL of the End-User's profile picture" },
            { JwtClaimTypes.PreferredUserName ,"Shorthand name by which the End-User wishes to be referred to at the RP" },
            { JwtClaimTypes.Profile ,"URL of the End-User's profile page" },
            { JwtClaimTypes.ReferenceTokenId ,"The reference token identifier" },
            { JwtClaimTypes.Role ,"The role" },
            { JwtClaimTypes.Scope ,"Scopes define the specific actions applications can be allowed to do on a user's behalf" },
            { JwtClaimTypes.SessionId ,"Session identifier" },
            { JwtClaimTypes.StateHash ,"State hash value" },
            { JwtClaimTypes.UpdatedAt ,"Time the End-User's information was last updated" },
            { JwtClaimTypes.WebSite ,"URL of the End-User's Web page or blog" },
            { JwtClaimTypes.ZoneInfo ,"String from the time zone database representing the End-User's time zone" },
            { ClaimTypes.Anonymous, "Specifies the anonymous user" },
            { ClaimTypes.AuthenticationMethod, "Specifies the method with which an entity was authenticated" },
            { ClaimTypes.Email, "Specifies the email address of an entity" },
            { ClaimTypes.Name, "Specifies the name of an entity" },
            { ClaimTypes.Actor, "Specifies the actor" },
            { ClaimTypes.Expiration, "Expiration time" },
            { ClaimTypes.Gender, "Specifies the gender of an entity" },
            { ClaimTypes.GivenName, "Specifies the given name of an entity" },
            { ClaimTypes.Role, "Specifies the Role of an entity" },
            { ClaimTypes.Authentication, "Specifies details about whether an identity is authenticated" },
            { ClaimTypes.AuthenticationInstant, "Specifies the instant at which an entity was authenticated" },
            { ClaimTypes.AuthorizationDecision, "Specifies an authorization decision on an entity" },
            { ClaimTypes.CookiePath, "Specifies the cookie path" },
            { ClaimTypes.Country, "Specifies the country/region in which an entity resides" },
            { ClaimTypes.DateOfBirth, "Specifies the date of birth of an entity" },
            { ClaimTypes.DenyOnlyPrimaryGroupSid, "Specifies the deny-only primary group SID on an entity.A deny-only SID denies the specified entity to a securable object" },
            { ClaimTypes.DenyOnlyPrimarySid, "Specifies the deny-only primary SID on an entity. A deny-only SID denies the specified entity to a securable object" },
            { ClaimTypes.DenyOnlySid, "Specifies a deny-only security identifier (SID) for an entity. A deny-only SID denies the specified entity to a securable object" },
            { ClaimTypes.DenyOnlyWindowsDeviceGroup, "Specifies the Windows deny-only group SID of the device" },
            { ClaimTypes.Dns, "Specifies the DNS name associated with the computer name or with the alternative name of either the subject or issuer of an X.509 certificate" },
            { ClaimTypes.Dsa, "Digital Signature Algorithm" },
            { ClaimTypes.Expired, "Specifies if the token has expired or not" },
            { ClaimTypes.GroupSid, "Specifies the SID for the group of an entity" },
            { ClaimTypes.Hash, "Specifies a hash value," },
            { ClaimTypes.HomePhone, "Specifies the home phone number of an entity" },
            { ClaimTypes.NameIdentifier, "Specifies the name of an entity" },
            { ClaimTypes.IsPersistent, "Specifies if the token is persistent" },
            { ClaimTypes.OtherPhone, "Specifies the alternative phone number of an entity" },
            { ClaimTypes.MobilePhone, "Specifies the mobile phone number of an entity" },
            { ClaimTypes.Locality, "Specifies the locale in which an entity resides" },
            { ClaimTypes.PostalCode, "Specifies the postal code of an entity" },
            { ClaimTypes.PrimaryGroupSid, "Specifies the primary group SID of an entity" },
            { ClaimTypes.PrimarySid, "Specifies the primary SID of an entity" },
            { ClaimTypes.Rsa, "Specifies an RSA key" },
            { ClaimTypes.SerialNumber, "Specifies a serial number" },
            { ClaimTypes.Sid, "Specifies a security identifier (SID)" },
            { ClaimTypes.Spn, "Specifies a service principal name (SPN) claim" },
            { ClaimTypes.StateOrProvince, "Specifies the state or province in which an entity resides" },
            { ClaimTypes.StreetAddress, "Specifies the street address of an entity" },
            { ClaimTypes.Surname, "Specifies the surname of an entity" },
            { ClaimTypes.System, "Identifies the system entity" },
            { ClaimTypes.Thumbprint, "Specifies a thumbprint. A thumbprint is a globally unique SHA-1 hash of an X.509 certificate" },
            { ClaimTypes.Upn, "Specifies a user principal name (UPN)" },
            { ClaimTypes.Uri, "Specifies a URI" },
            { ClaimTypes.UserData, "Specifies the user data" },
            { ClaimTypes.Version, "Specifies the version" },
            { ClaimTypes.Webpage, "Specifies the webpage of an entity" },
            { ClaimTypes.WindowsAccountName, "Specifies the Windows domain account name of an entity" },
            { ClaimTypes.WindowsDeviceClaim, "Windows Device Claim" },
            { ClaimTypes.WindowsDeviceGroup, "Specifies the Windows group SID of the device" },
            { ClaimTypes.WindowsFqbnVersion, "Windows Fqbn Version" },
            { ClaimTypes.WindowsSubAuthority, "Windows Sub Authority" },
            { ClaimTypes.WindowsUserClaim, "Windows User Claim" },
            { ClaimTypes.X500DistinguishedName, "An X.500 distinguished name claim, such as the subject of an X.509 Public Key Certificate or an entry identifier in a directory services Directory Information Tree" },
        };
    }
}
