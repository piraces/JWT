@using System.IdentityModel.Tokens.Jwt
<div class="alert alert-secondary mt-4" role="alert">
    <strong>@Title</strong>&nbsp;@Subtitle
</div>
<div class="mb-1">
    <textarea class="@InputCssClass()" id="tokenTextArea" rows="20" @bind="Token" @bind:event="oninput" @onkeyup="HandleToken"></textarea>
    <div class="invalid-feedback">
        The token provided is invalid...
    </div>
    <div class="valid-feedback">
        The token is valid
    </div>
</div>

@code {
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public string? Subtitle { get; set; }
    [Parameter]
    public Action<string>? OnInputChange { get; set; }

    private string? Token { get; set; }
    private bool? ValidToken { get; set; }

    string InputCssClass() {
        var cssClass = new List<string>{ "form-control" };
        if (!ValidToken.HasValue)
        {
            return string.Join(' ', cssClass);
        }

        if (!string.IsNullOrEmpty(Token) && !ValidToken.Value)
        {
            cssClass.Add("is-invalid");
        } else if (!string.IsNullOrEmpty(Token))
        {
            cssClass.Add("is-valid");
        }
        return string.Join(' ', cssClass);
    }

    private void HandleToken()
    {
        var jwtHandler = new JwtSecurityTokenHandler();
        ValidToken = jwtHandler.CanReadToken(Token);
        if (Token is not null)
        {
            OnInputChange?.Invoke(Token);
        }
    }
}