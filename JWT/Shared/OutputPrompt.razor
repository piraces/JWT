@using JWT.Models

<div class="alert alert-secondary mt-4" role="alert">
    <strong>@Title</strong>&nbsp;@Subtitle
</div>
<div class="@OutputCssClass()">
    <p class="output-title">
        HEADER:
        <span class="output-subtitle">ALGORITHM &amp; TOKEN TYPE</span>
    </p>
    @if (Token?.Header != null && Token.Header.Count > 0)
    {
        <pre class="form-control token-output token-output-header">{
        @foreach (var item in Token.Header)
        {
        <span title="@item?.KeyInfo">"@item?.Key": "@item?.Value"</span>
        }}</pre>
    }

    <p class="output-title">
        PAYLOAD:
        <span class="output-subtitle">DATA</span>
    </p>
    @if (Token?.Payload != null && Token.Payload.Count > 0)
    {
        <pre class="form-control token-output token-output-payload">{
        @foreach (var item in Token.Payload)
        {
        <span title="@item?.KeyInfo">"@item?.Key": "@item?.Value"</span>
        }}</pre>
    }

    <p class="output-title">
        SIGNATURE:
    </p>
    <pre class="form-control token-output token-output-signature">@Token?.Signature</pre>
</div>

@code {
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Subtitle { get; set; }
    [Parameter]
    public Token Token { get; set; }


    string OutputCssClass()
    {
        var cssClass = new List<string> { "mb-1" };

        if (Token?.Header == null || Token.Payload == null)
        {
            cssClass.Add("hidden-output");
        }

        return string.Join(' ', cssClass);
    }
}